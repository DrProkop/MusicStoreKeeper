<UserControl x:Class="MusicStoreKeeper.Vmv.View.MusicCollectionScreenView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:model="clr-namespace:MusicStoreKeeper.Model;assembly=MusicStoreKeeper.Model"
             xmlns:view="clr-namespace:MusicStoreKeeper.Vmv.View"
             xmlns:viewModel="clr-namespace:MusicStoreKeeper.Vmv.ViewModel"
             xmlns:converters="clr-namespace:MusicStoreKeeper.Vmv.View.Converters"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="1000">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/ResourceLibrary;component/Styles.xaml" />
                <ResourceDictionary Source="pack://application:,,,/ResourceLibrary;component/Brushes.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.Resources>
            <!-- converters -->
            <!--TODO: Move to ResourceLibrary-->
            <converters:MultiValueConverterAdapter x:Key="WrappedBoolToVisibilityConverter">
                <converters:TreeViewAlbumVisibilityConverter />
            </converters:MultiValueConverterAdapter>
            <!-- templates for treeview-->
            <!-- template for album-->
            <HierarchicalDataTemplate x:Key="AlbumsTemplate" DataType="{x:Type viewModel:AlbumWrap}">
                <StackPanel Style="{StaticResource StackPanelTreeViewItemStyle}">
                    <Image Height="16" Width="16" Source="{Binding Icon, Mode=OneWay}" VerticalAlignment="Center" />
                    <CheckBox IsChecked="{Binding IsChecked}" Style="{StaticResource CheckBoxTreeViewStyle}" />
                    <Border Style="{StaticResource BorderTreeViewItemStyle}">
                        <StackPanel Style="{StaticResource StackPanelTreeViewItemStyle}">
                            <TextBlock Text="{Binding Value.ReleaseDate}" Style="{StaticResource TextBlockTreeViewItemStyle}" />
                            <TextBlock Text=" - " Style="{StaticResource TextBlockTreeViewItemStyle}" />
                            <TextBlock Text="{Binding Value.Title}"  Style="{StaticResource TextBlockTreeViewItemStyle}" />
                        </StackPanel>
                    </Border>
                </StackPanel>
            </HierarchicalDataTemplate>
            <!-- template for artist-->
            <HierarchicalDataTemplate x:Key="ArtistsTemplate" DataType="{x:Type viewModel:ArtistWrap}"
                                      ItemsSource="{Binding Children}" ItemTemplate="{StaticResource AlbumsTemplate}">
                <StackPanel Style="{StaticResource StackPanelTreeViewItemStyle}">
                    <Image Height="16" Width="16" Source="{Binding Icon, Mode=OneWay}" VerticalAlignment="Center" />
                    <CheckBox IsChecked="{Binding IsChecked}" Style="{StaticResource CheckBoxTreeViewStyle}" />
                    <Border Style="{StaticResource BorderTreeViewItemStyle}">
                        <TextBlock Text="{Binding Value.Name}" FontSize="16" Style="{StaticResource TextBlockTreeViewItemStyle}" />
                    </Border>
                </StackPanel>
                <HierarchicalDataTemplate.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter>
                            <Setter.Property>Visibility</Setter.Property>
                            <Setter.Value>
                                <MultiBinding Converter="{StaticResource WrappedBoolToVisibilityConverter}">
                                    <Binding Path="Value.InCollection" />
                                    <Binding ElementName="MusicCollectionTreeView" Path="DataContext.ShowAlbumsNotInCollection"></Binding>
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Foreground" Value="{StaticResource MainForegroundBrush}" />
                        <Style.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="FontWeight" Value="Bold" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </HierarchicalDataTemplate.ItemContainerStyle>
            </HierarchicalDataTemplate>
            <!-- templates for preview-->
            <DataTemplate DataType="{x:Type viewModel:ArtistPreviewVm}">
                <view:ArtistPreviewView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModel:AlbumPreviewVm}">
                <view:AlbumPreviewView />
            </DataTemplate>
        </Grid.Resources>

        <!-- artists with albums list -->
        <TreeView Grid.Column="0" Name="MusicCollectionTreeView" ItemsSource="{Binding ArtistsCollection}"
                  ItemTemplate="{StaticResource ArtistsTemplate}" Style="{StaticResource TreeViewStyle}"
                  Width="Auto" Margin="0">
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="view:AttachedProps.ExpandingProperty"
                            Value="{Binding ElementName=MusicCollectionTreeView, Path=DataContext.ArtistExpandedCommand}" />
                </Style>
            </TreeView.ItemContainerStyle>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectedItemChanged">
                    <i:InvokeCommandAction Command="{Binding SelectedItemChangedCommand}"
                                           CommandParameter="{Binding ElementName=MusicCollectionTreeView, Path=SelectedItem}" />
                    <i:InvokeCommandAction />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TreeView>

        <!-- gridsplitter-->
        <GridSplitter Grid.Column="1" Style="{StaticResource GridSplitterVerticalStyle}" />

        <!-- artist and album previews-->
        <Border Grid.Column="2" BorderBrush="{StaticResource Border.LightBlueBorderBrush}" BorderThickness="1">
            <ContentControl Content="{Binding CollectionItemPreview}" />
        </Border>
    </Grid>
</UserControl>